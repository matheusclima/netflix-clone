[{"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/index.js":"1","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js":"2","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/services/Tmdb.js":"3","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/components/Header/index.js":"4","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/components/MovieRow/index.js":"5","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/components/FeaturedMovie/index.js":"6"},{"size":202,"mtime":1626054382797,"results":"7","hashOfConfig":"8"},{"size":1710,"mtime":1626231442536,"results":"9","hashOfConfig":"8"},{"size":2290,"mtime":1626211339064,"results":"10","hashOfConfig":"8"},{"size":1454,"mtime":1626094208115,"results":"11","hashOfConfig":"8"},{"size":2199,"mtime":1626376440999,"results":"12","hashOfConfig":"8"},{"size":1587,"mtime":1626227246443,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"129fo9a",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/index.js",[],["31","32"],"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js",["33"],"import React, { useState, useEffect, componentDidMount } from 'react'\nimport Tmdb from '../services/Tmdb'\nimport Header from '../components/Header'\nimport MovieRow from '../components/MovieRow'\nimport FeaturedMovie from '../components/FeaturedMovie'\nimport './App.css'\n\nexport default function App() {\n\n    const [movieList, setMovieList] = useState(null);\n    const [background, setBackground] = useState(true);\n    const [featuredMovie, setFeaturedMovie] = useState({});\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        async function loadAll() {\n            let list = await Tmdb.getHomeList();\n            console.log(list)\n            let originals = await list[0].items.results\n            let featured = await Math.floor(Math.random() * (originals.length + 1));\n            let chosen = await Tmdb.getFeaturedMovie(originals[featured].id)\n            console.log(chosen)\n            setMovieList(list);\n            setFeaturedMovie(chosen)\n            setLoading(false)\n        }\n        loadAll();\n    }, []);\n\n    window.addEventListener('scroll', () => {\n        if (window.scrollY > 50) {\n            setBackground(false)\n        } else {\n            setBackground(true)\n        }\n    })\n\n    \n    return (\n        loading ? \n        <div className='loading'>\n        </div> :\n        <div id='netflix'>\n            <Header background={background} />\n\n            {featuredMovie &&\n                <FeaturedMovie movie={featuredMovie}/> \n            }\n        \n            {movieList &&\n            <div className='movie--lists'>\n                {movieList.map(list => <MovieRow list={list}/>)}\n            </div>\n                \n            } \n        </div>\n    )\n}","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/services/Tmdb.js",["34"],"import axios from 'axios'\n\nconst API_KEY = '2b9c6bef29017ea25df8f3994053dd38'\n\nconst config = {\n    headers: {\n        'Content-Type': 'application/json',\n        'Access-Control-Allow-Origin': '*'\n    }\n}\n\nconst api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    config: config\n})\n\nconst basicFetch = async(params) =>{\n    const resp = await api.get(params);\n    return resp.data;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title : \"Originais do Netflix\",\n                items : await basicFetch(`/discover/tv/?with_networks=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title : \"Recomendados para Você\",\n                items : await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title : \"Em Alta\",\n                items : await basicFetch(`/movie/top_rated?&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title : \"Ação\",\n                items : await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title : \"Comédia\",\n                items : await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title : \"Terror\",\n                items : await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title : \"Romance\",\n                items : await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },            \n            {\n                slug: 'documentary',\n                title : \"Documentários\",\n                items : await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ]\n    },\n    getFeaturedMovie: async (id) => {\n        return await basicFetch(`tv/${id}?language=pt-BR&api_key=${API_KEY}`);\n    }\n}\n","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/components/Header/index.js",["35","36","37","38","39","40","41","42"],"import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faBell } from '@fortawesome/free-solid-svg-icons'\nimport './style.css'\n\nconst Header = (props) => {\n\n    return(\n        <div className={props.background ? 'header transparent': 'header normal'}>\n            <div className='menu left'>\n                <img id='logo--img' src='https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-1-1.png'></img>\n                <ul>\n                    <li id='start' style={{fontWeight: 'bold'}}><a>Início</a></li>\n                    <li><a>Séries</a></li>\n                    <li><a>Filmes</a></li>\n                    <li><a>Bombando</a></li>\n                    <li><a>Minha lista</a></li>\n                </ul>\n            </div>\n            <div className='menu right'>\n                <div className='search--container'>\n                    <FontAwesomeIcon icon={faSearch} size='lg'/>\n                    <input className='search--box' type='text' placeholder='Títulos, gente e gêneros...'/>\n                </div>\n                <a>INFANTIL</a>\n                <div className='news--container'>\n                    <FontAwesomeIcon className='bell--icon' icon={faBell} />\n                </div>\n                <img id='profile--img' src='https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png'></img>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/components/MovieRow/index.js",["43"],"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/components/FeaturedMovie/index.js",["44"],"import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay, faPlus } from '@fortawesome/free-solid-svg-icons'\nimport './style.css'\n\nconst FeaturedMovie = (props) => {\n\n    return (\n        <div className='featured--container'>\n            <img className='featured--img' src={`https://image.tmdb.org/t/p/original${props.movie.backdrop_path}`} />\n            <div className='featured--info'>\n                <h3 className='featured--name'>{`${props.movie.name}`}</h3>\n                <h3 className='featured--avg'>{`${props.movie.vote_average} ponto${props.movie.vote_average <= 1 ? '' : 's'}`}</h3>\n                <h3 className='featured--release'>{`${props.movie.first_air_date.substring(0, 4)}`}</h3>\n                <h3 className='featured--seasons'>{`${props.movie.number_of_seasons} temporadas`}</h3>\n                <h3 className='featured--overview'>{`${props.movie.overview}`}</h3>\n                <div className='buttons'>\n                    <button className='watch--button'>\n                        <FontAwesomeIcon className='play--icon' icon={faPlay} />\n                        <span>Assistir</span>\n                    </button>\n                    <button className='mylist--button'>\n                        <FontAwesomeIcon className='plus--icon' icon={faPlus} />\n                        <span>Minha Lista</span>\n                    </button>\n                </div>\n                <h3 className='genres'>{`Gêneros: ${props.movie.genres.map(genre => ` ${genre.name}`)}`}</h3>\n            </div>\n        </div>\n    )\n}\n\nexport default FeaturedMovie",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":1,"column":38,"nodeType":"51","messageId":"52","endLine":1,"endColumn":55},{"ruleId":"53","severity":1,"message":"54","line":22,"column":1,"nodeType":"55","endLine":70,"endColumn":2},{"ruleId":"56","severity":1,"message":"57","line":11,"column":17,"nodeType":"58","endLine":11,"endColumn":116},{"ruleId":"59","severity":1,"message":"60","line":13,"column":65,"nodeType":"58","endLine":13,"endColumn":68},{"ruleId":"59","severity":1,"message":"60","line":14,"column":25,"nodeType":"58","endLine":14,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":15,"column":25,"nodeType":"58","endLine":15,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":16,"column":25,"nodeType":"58","endLine":16,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":17,"column":25,"nodeType":"58","endLine":17,"endColumn":28},{"ruleId":"59","severity":1,"message":"60","line":25,"column":17,"nodeType":"58","endLine":25,"endColumn":20},{"ruleId":"56","severity":1,"message":"57","line":29,"column":17,"nodeType":"58","endLine":29,"endColumn":117},{"ruleId":"56","severity":1,"message":"57","line":58,"column":29,"nodeType":"58","endLine":58,"endColumn":96},{"ruleId":"56","severity":1,"message":"57","line":9,"column":13,"nodeType":"58","endLine":9,"endColumn":118},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'componentDidMount' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation"]