{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Tmdb from '../services/Tmdb';\nimport Header from '../components/Header/index';\nimport MovieRow from '../components/MovieRow/index';\nimport FeaturedMovie from '../components/FeaturedMovie/index';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const [movieList, setMovieList] = useState(null);\n  const [background, setBackground] = useState(true);\n  const [featuredMovie, setFeaturedMovie] = useState({});\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    async function loadAll() {\n      let list = await Tmdb.getHomeList();\n      console.log(list);\n      let originals = await list[0].items.results;\n      let featured = await Math.floor(Math.random() * (originals.length + 1));\n      setFeaturedMovie(originals[featured]);\n      setMovieList(list);\n    }\n\n    loadAll();\n  }, []);\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 50) {\n      setBackground(false);\n    } else {\n      setBackground(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"netflix\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      background: background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), featuredMovie && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      movie: featuredMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }, this), movieList && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: movieList.map(list => /*#__PURE__*/_jsxDEV(MovieRow, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js"],"names":["React","useState","useEffect","Tmdb","Header","MovieRow","FeaturedMovie","App","movieList","setMovieList","background","setBackground","featuredMovie","setFeaturedMovie","loading","setLoading","loadAll","list","getHomeList","console","log","originals","items","results","featured","Math","floor","random","length","window","addEventListener","scrollY","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,8BAArB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,OAAO,WAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACS,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAec,OAAf,GAAyB;AACrB,UAAIC,IAAI,GAAG,MAAMd,IAAI,CAACe,WAAL,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAII,SAAS,GAAG,MAAMJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,KAAR,CAAcC,OAApC;AACA,UAAIC,QAAQ,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBN,SAAS,CAACO,MAAV,GAAmB,CAApC,CAAX,CAArB;AACAf,MAAAA,gBAAgB,CAACQ,SAAS,CAACG,QAAD,CAAV,CAAhB;AACAf,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACH;;AACDD,IAAAA,OAAO;AACV,GAVQ,EAUN,EAVM,CAAT;AAYAa,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,QAAID,MAAM,CAACE,OAAP,GAAiB,EAArB,EAAyB;AACrBpB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAND;AAQA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKE,aAAa,iBACV,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJR,EAOKJ,SAAS,iBACV;AAAA,gBACKA,SAAS,CAACwB,GAAV,CAAcf,IAAI,iBAAI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAtB;AADL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Tmdb from '../services/Tmdb'\nimport Header from '../components/Header/index'\nimport MovieRow from '../components/MovieRow/index'\nimport FeaturedMovie from '../components/FeaturedMovie/index'\nimport './App.css'\n\nexport default function App() {\n\n    const [movieList, setMovieList] = useState(null);\n    const [background, setBackground] = useState(true);\n    const [featuredMovie, setFeaturedMovie] = useState({});\n    const [loading, setLoading] = useState(false)\n    \n    useEffect(() => {\n        async function loadAll() {\n            let list = await Tmdb.getHomeList();\n            console.log(list)\n            let originals = await list[0].items.results\n            let featured = await Math.floor(Math.random() * (originals.length + 1));\n            setFeaturedMovie(originals[featured])\n            setMovieList(list);\n        }\n        loadAll();\n    }, []);\n\n    window.addEventListener('scroll', () => {\n        if (window.scrollY > 50) {\n            setBackground(false)\n        } else {\n            setBackground(true)\n        }\n    })\n\n    return (\n        <div id='netflix'>\n            <Header background={background} />\n\n            {featuredMovie &&\n                <FeaturedMovie movie={featuredMovie}/> \n            }\n        \n            {movieList &&\n            <div>\n                {movieList.map(list => <MovieRow list={list}/>)}\n            </div>\n                \n            } \n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}