{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js\";\nimport React, { useState, useEffect, componentDidMount } from 'react';\nimport Tmdb from '../services/Tmdb';\nimport Header from '../components/Header';\nimport MovieRow from '../components/MovieRow';\nimport FeaturedMovie from '../components/FeaturedMovie';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const [movieList, setMovieList] = useState(null);\n  const [background, setBackground] = useState(true);\n  const [featuredMovie, setFeaturedMovie] = useState({});\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    async function loadAll() {\n      let list = await Tmdb.getHomeList();\n      console.log(list);\n      let originals = await list[0].items.results;\n      let featured = await Math.floor(Math.random() * (originals.length + 1));\n      let chosen = await Tmdb.getFeaturedMovie(originals[featured].id);\n      console.log(chosen);\n      setMovieList(list);\n      setFeaturedMovie(chosen);\n      setLoading(false);\n    }\n\n    loadAll();\n  }, []);\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 50) {\n      setBackground(false);\n    } else {\n      setBackground(true);\n    }\n  });\n  return loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loading\",\n    children: /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\",\n      alt: \"loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"netflix\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      background: background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), featuredMovie && /*#__PURE__*/_jsxDEV(FeaturedMovie, {\n      movie: featuredMovie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }, this), movieList && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie--lists\",\n      children: movieList.map(list => /*#__PURE__*/_jsxDEV(MovieRow, {\n        list: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 40\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js"],"names":["React","useState","useEffect","componentDidMount","Tmdb","Header","MovieRow","FeaturedMovie","App","movieList","setMovieList","background","setBackground","featuredMovie","setFeaturedMovie","loading","setLoading","loadAll","list","getHomeList","console","log","originals","items","results","featured","Math","floor","random","length","chosen","getFeaturedMovie","id","window","addEventListener","scrollY","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,iBAArC,QAA8D,OAA9D;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,WAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACU,UAAD,EAAaC,aAAb,IAA8BX,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAee,OAAf,GAAyB;AACrB,UAAIC,IAAI,GAAG,MAAMd,IAAI,CAACe,WAAL,EAAjB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACA,UAAII,SAAS,GAAG,MAAMJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,KAAR,CAAcC,OAApC;AACA,UAAIC,QAAQ,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBN,SAAS,CAACO,MAAV,GAAmB,CAApC,CAAX,CAArB;AACA,UAAIC,MAAM,GAAG,MAAM1B,IAAI,CAAC2B,gBAAL,CAAsBT,SAAS,CAACG,QAAD,CAAT,CAAoBO,EAA1C,CAAnB;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYS,MAAZ;AACApB,MAAAA,YAAY,CAACQ,IAAD,CAAZ;AACAJ,MAAAA,gBAAgB,CAACgB,MAAD,CAAhB;AACAd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH;;AACDC,IAAAA,OAAO;AACV,GAbQ,EAaN,EAbM,CAAT;AAeAgB,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,QAAID,MAAM,CAACE,OAAP,GAAiB,EAArB,EAAyB;AACrBvB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAND;AASA,SACIG,OAAO,gBACP;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,2BACI;AAAK,MAAA,GAAG,EAAC,sEAAT;AAAgF,MAAA,GAAG,EAAC;AAApF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADO,gBAIP;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAEJ;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,EAGKE,aAAa,iBACV,QAAC,aAAD;AAAe,MAAA,KAAK,EAAEA;AAAtB;AAAA;AAAA;AAAA;AAAA,YAJR,EAOKJ,SAAS,iBACV;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,gBACKA,SAAS,CAAC2B,GAAV,CAAclB,IAAI,iBAAI,QAAC,QAAD;AAAU,QAAA,IAAI,EAAEA;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAtB;AADL;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UALJ;AAoBH","sourcesContent":["import React, { useState, useEffect, componentDidMount } from 'react'\nimport Tmdb from '../services/Tmdb'\nimport Header from '../components/Header'\nimport MovieRow from '../components/MovieRow'\nimport FeaturedMovie from '../components/FeaturedMovie'\nimport './App.css'\n\nexport default function App() {\n\n    const [movieList, setMovieList] = useState(null);\n    const [background, setBackground] = useState(true);\n    const [featuredMovie, setFeaturedMovie] = useState({});\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        async function loadAll() {\n            let list = await Tmdb.getHomeList();\n            console.log(list)\n            let originals = await list[0].items.results\n            let featured = await Math.floor(Math.random() * (originals.length + 1));\n            let chosen = await Tmdb.getFeaturedMovie(originals[featured].id)\n            console.log(chosen)\n            setMovieList(list);\n            setFeaturedMovie(chosen)\n            setLoading(false)\n        }\n        loadAll();\n    }, []);\n\n    window.addEventListener('scroll', () => {\n        if (window.scrollY > 50) {\n            setBackground(false)\n        } else {\n            setBackground(true)\n        }\n    })\n\n    \n    return (\n        loading ? \n        <div className='loading'>\n            <img src='https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif' alt='loading'/>\n        </div> :\n        <div id='netflix'>\n            <Header background={background} />\n\n            {featuredMovie &&\n                <FeaturedMovie movie={featuredMovie}/> \n            }\n        \n            {movieList &&\n            <div className='movie--lists'>\n                {movieList.map(list => <MovieRow list={list}/>)}\n            </div>\n                \n            } \n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}