{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport Tmdb from '../services/Tmdb';\nimport Header from '../components/Header/index';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  const [movieList, setMovieList] = useState([]);\n  const [background, setBackground] = useState(true);\n  const [featuredMovie, setFeaturedMovie] = useState(null);\n  useEffect(() => {\n    async function loadAll() {\n      let list = await Tmdb.getHomeList();\n      let originals = list[0].items.results;\n      let featured = Math.floor(Math.random() * (originals.length + 1));\n      setFeaturedMovie(originals[featured]);\n      setMovieList(list);\n    }\n\n    loadAll();\n  }, []);\n  window.addEventListener('scroll', () => {\n    if (window.scrollY > 50) {\n      setBackground(false);\n    } else {\n      setBackground(true);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"netflix\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      background: background\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row--header\",\n      children: movieList.map(list => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: list.slug,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row--imgs\",\n          children: list.items.results.map(movie => /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"movie--poster\",\n            src: `https://image.tmdb.org/t/p/w300${movie.poster_path}`\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 62\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 25\n        }, this)]\n      }, list.slug, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["/home/matheus/Matheus/Projetos/javascript/netflix-clone/src/main/App.js"],"names":["React","useState","useEffect","Tmdb","Header","App","movieList","setMovieList","background","setBackground","featuredMovie","setFeaturedMovie","loadAll","list","getHomeList","originals","items","results","featured","Math","floor","random","length","window","addEventListener","scrollY","map","slug","title","movie","poster_path","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAO,WAAP;;AAEA,eAAe,SAASC,GAAT,GAAe;AAE1B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,IAAD,CAAlD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,mBAAeU,OAAf,GAAyB;AACrB,UAAIC,IAAI,GAAG,MAAMV,IAAI,CAACW,WAAL,EAAjB;AACA,UAAIC,SAAS,GAAGF,IAAI,CAAC,CAAD,CAAJ,CAAQG,KAAR,CAAcC,OAA9B;AACA,UAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAeN,SAAS,CAACO,MAAV,GAAmB,CAAlC,CAAX,CAAf;AAEAX,MAAAA,gBAAgB,CAACI,SAAS,CAACG,QAAD,CAAV,CAAhB;AACAX,MAAAA,YAAY,CAACM,IAAD,CAAZ;AACH;;AACDD,IAAAA,OAAO;AACV,GAVQ,EAUN,EAVM,CAAT;AAYAW,EAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkC,MAAM;AACpC,QAAGD,MAAM,CAACE,OAAP,GAAiB,EAApB,EAAwB;AACpBhB,MAAAA,aAAa,CAAC,KAAD,CAAb;AACH,KAFD,MAEO;AACHA,MAAAA,aAAa,CAAC,IAAD,CAAb;AACH;AACJ,GAND;AAQA,sBACI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,UAAU,EAAED;AAApB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,gBAEKF,SAAS,CAACoB,GAAV,CAAcb,IAAI,iBACf;AAAK,QAAA,EAAE,EAAEA,IAAI,CAACc,IAAd;AAAA,gCAEI;AAAA,oBAAOd,IAAI,CAACe;AAAZ;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAII;AAAK,UAAA,SAAS,EAAC,WAAf;AAAA,oBACKf,IAAI,CAACG,KAAL,CAAWC,OAAX,CAAmBS,GAAnB,CAAuBG,KAAK,iBAAI;AAAoB,YAAA,SAAS,EAAC,eAA9B;AAA8C,YAAA,GAAG,EAAG,kCAAiCA,KAAK,CAACC,WAAY;AAAvG,aAAUD,KAAK,CAACE,EAAhB;AAAA;AAAA;AAAA;AAAA,kBAAhC;AADL;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA,SAAyBlB,IAAI,CAACc,IAA9B;AAAA;AAAA;AAAA;AAAA,cADH;AAFL;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport Tmdb from '../services/Tmdb'\nimport Header from '../components/Header/index'\nimport './App.css'\n\nexport default function App() {\n\n    const [movieList, setMovieList] = useState([]);\n    const [background, setBackground] = useState(true);\n    const [featuredMovie, setFeaturedMovie] = useState(null);\n\n    useEffect(() => {\n        async function loadAll() {\n            let list = await Tmdb.getHomeList();\n            let originals = list[0].items.results\n            let featured = Math.floor(Math.random()*(originals.length + 1));\n\n            setFeaturedMovie(originals[featured])\n            setMovieList(list);\n        }\n        loadAll();\n    }, []);\n\n    window.addEventListener('scroll', () => {\n        if(window.scrollY > 50) {\n            setBackground(false)\n        } else {\n            setBackground(true)\n        }\n    })\n\n    return (\n        <div id='netflix'>\n            <Header background={background}/>\n\n            \n            <div className='row--header'>\n\n                {movieList.map(list =>\n                    <div id={list.slug} key={list.slug}>\n\n                        <span>{list.title}</span>\n\n                        <div className='row--imgs' >\n                            {list.items.results.map(movie => <img key={movie.id} className='movie--poster' src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} ></img>)}\n                        </div>\n\n                    </div>\n                )}\n\n            </div>\n\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}